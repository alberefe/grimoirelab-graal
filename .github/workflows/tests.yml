name: tests

on:
  push:
    branches:
      - '**'
    tags:
      - '!**'
  pull_request:
    branches:
      - '**'

jobs:
  tests:
    
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    
    name: Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and set up Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "PATH=$HOME/.poetry/bin:$PATH" >> $GITHUB_ENV
        
      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6
        
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        
      - name: Install dependencies
        run: |
          poetry install
          poetry add -D coveralls
          gem install github-linguist -v 7.15
          wget https://github.com/fossology/fossology/releases/download/3.11.0/FOSSology-3.11.0-ubuntu-focal.tar.gz
          tar -xzf FOSSology-3.11.0-ubuntu-focal.tar.gz
          sudo apt-get update -y
          sudo apt-get -y install ./packages/fossology-common_3.11.0-1_amd64.deb \
                                  ./packages/fossology-nomos_3.11.0-1_amd64.deb
          sudo apt-get install cloc
        
      - name: Install requirements
        run: |
          mkdir exec
          cd exec
          go get -u github.com/boyter/scc/
          cd $GITHUB_WORKSPACE/exec/
          git clone https://github.com/nexB/scancode-toolkit.git
          cd scancode-toolkit
          git checkout -b test_scancli 96069fd84066c97549d54f66bd2fe8c7813c6b52
          ./scancode --help
          cd $GITHUB_WORKSPACE/exec/
          wget https://github.com/crossminer/crossJadolint/releases/download/Pre-releasev2/jadolint.jar
          cd $GITHUB_WORKSPACE/
        
      - name: Lint with flake8
        run: |
          poetry run flake8 --exclude=exec,src
        
      - name: Tests and Coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd tests
          poetry run coverage run --source=graal run_tests.py
          poetry run coveralls --service=github
